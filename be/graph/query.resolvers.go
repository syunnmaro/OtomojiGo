package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.41

import (
	"context"
	"graphql-test-api/ent"
	"graphql-test-api/ent/part"
	"graphql-test-api/ent/user"
	"graphql-test-api/ent/work"
	"strings"

	jwtmiddleware "github.com/auth0/go-jwt-middleware/v2"
	"github.com/auth0/go-jwt-middleware/v2/validator"
)

// GetUserFromGoogleID is the resolver for the getUserFromGoogleId field.
func (r *queryResolver) GetUserFromGoogleID(ctx context.Context) (*ent.User, error) {
	payload := ctx.Value(jwtmiddleware.ContextKey{}).(*validator.ValidatedClaims)
	googleId := strings.Split(payload.RegisteredClaims.Subject, "|")[1]
	return r.Client.User.Query().Where(user.GoogleIDEQ(googleId)).First(ctx)
}

// GetWorkByID is the resolver for the getWorkById field.
func (r *queryResolver) GetWorkByID(ctx context.Context, workID string) (*ent.Work, error) {

	return r.Client.Work.Query().Where(work.IDEQ(workID)).First(ctx)
}

// GetPartByID is the resolver for the getPartById field.
func (r *queryResolver) GetPartByID(ctx context.Context, partID string) (*ent.Part, error) {
	return r.Client.Part.Query().Where(part.IDEQ(partID)).First(ctx)
}
